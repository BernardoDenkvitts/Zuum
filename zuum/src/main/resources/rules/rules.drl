package rules;

import com.example.zuum.Ride.Dto.PriceRequestDTO;
import com.example.zuum.Ride.RidePrice;
import com.example.zuum.Ride.RideModel;
import com.example.zuum.Ride.RideStatus;



dialect  "mvel"

declare RideModel
    @role( event )
    @timestamp( date )
    @expires( 25h )
end

rule "night-ride"
    when
        $price: RidePrice()
        $request : PriceRequestDTO( 
            createdAt.getHour() >= 19,
            createdAt.getHour() <= 23
        )
    then
        System.out.println("RULE -> night-ride-rule activated");
        $price.increase(0.03);
end

rule "dawn-ride"
    when
        $price: RidePrice()
        $request : PriceRequestDTO( 
            createdAt.getHour() > 23,
            createdAt.getHour() <= 7
        )
    then
        System.out.println("RULE -> dawn-ride-rule activated");
        $price.increase(0.06);
end

rule "high-number-of-rides-in-one-hour"
    when
        $price: RidePrice()
        accumulate ( 
            $ride: RideModel( status.name() != "PENDING", status.name() != "COMPLETED" ) over window:time( 1h ),
            $rideCount: count( $ride )) eval( $rideCount > 30 )
    then
        System.out.println("RULE -> high-number-of-rides-in-one-hour");
        $price.increase(0.1)
end

rule "active-daily-user"
    when
        $price: RidePrice()
        $request : PriceRequestDTO()
        accumulate (
            $ride: RideModel( passanger.getId() == $request.userId, status.name() == "COMPLETED" ) over window:time( 25h ),
            $rideCount: count( $ride )
        ) eval( $rideCount == 3 )
    then
        System.out.println("RULE -> active-daily-user");
        $price.decrease(0.05)
end

rule "fast-stop"
    when
        $price: RidePrice()
        $request : PriceRequestDTO()
        accumulate (
            $ride: RideModel( passanger.getId() == $request.userId, status.name() == "COMPLETED" ) over window:time( 11m ),
            $rideCount: count( $ride )
        ) eval( $rideCount == 1 )
    then
        System.out.println("RULE -> fast-stop");
        $price.decrease(0.07)
end

rule "frequent-user-last-hour"
    when
        $price: RidePrice()
        $request: PriceRequestDTO()
        accumulate(
            $ride: RideModel( passanger.getId() == $request.userId, status.name() == "COMPLETED" ) over window:time( 1h ),
            $rideCount : count( $ride )
        ) eval( $rideCount >= 2 )
    then
        System.out.println("RULE -> frequent-user-last-hour");
        $price.decrease(0.08)
end

rule "long-ride-last-two-hours"
    when
        $price: RidePrice()
        $request: PriceRequestDTO()
        accumulate(
            $ride: RideModel( passanger.getId() == $request.userId, status.name() == "COMPLETED", getRideDuration().toMinutes() >= 30 ) over window:time( 2h ),
            $rideCount : count( $ride )
        ) eval( $rideCount >= 1 )
    then
        System.out.println("RULE -> frequent-user-last-hour");
        $price.decrease(0.08)
end